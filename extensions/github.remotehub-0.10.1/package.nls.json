{
	"displayName": "Remote Repositories",
	"displayNameInsiders": "Remote Repositories (Insiders)",
	"description": "Remotely browse and edit a GitHub repository",
	"colors.added": "Color for added resources",
	"colors.modified": "Color for modified resources",
	"colors.deleted": "Color for deleted resources",
	"colors.conflict": "Color for resources with conflicts",
	"colors.incomingAdded": "Color for incoming added resources",
	"colors.incomingModified": "Color for incoming modified resources",
	"colors.incomingDeleted": "Color for incoming deleted resources",
	"colors.incomingRenamed": "Color for incoming renamed resources",
	"colors.possibleConflict": "Color for resources with possible conflicts",
	"colors.workspaceRepositoriesView.hasUncommittedChanges": "Color for workspace repositories that have uncommitted changes",
	"config.autoFetch.enabled": "Specifies whether to periodically fetch from the upstream repository",
	"config.autoFetch.interval": "Specifies the interval, in seconds, to periodically fetch from the upstream repository",
	"config.logLevel": "Specifies how much (if any) to log to the _Remote Repositories_ output channel",
	"config.logLevel.off": "Logs nothing",
	"config.logLevel.error": "Logs only errors",
	"config.logLevel.warn": "Logs all errors and warnings",
	"config.logLevel.info": "Logs all errors, warnings, and messages",
	"config.logLevel.debug": "Logs all errors, warnings, and messages with extra context useful for debugging",
	"config.staging.enabled": "Specifies whether to enable the staging of changes before committing",
	"config.staging.smart": "Specifies whether to automatically stage all changes, if there are none, before committing",
	"config.search.download.corsProxy": "Specifies the proxy to use when downloading repository indexes from a browser context",
	"config.search.download.enabled": "Specifies whether text search should download an index of the repository in order to provide more accurate search results",
	"config.search.download.sizeLimit": "Specifies the size (in MB) of search index cache. The search cache is located in the extension's global storage folder",
	"config.search.download.repoLimit": "Specifies the maximum number of search indexes cached per repo. Each reference requires a separate search index",
	"commands.openRepository": "Open Repository...",
	"commands.continueOn.openRepository": "Open Remote Repository...",
	"commands.addRepositoryToWorkspace": "Add Repository to Workspace...",
	"commands.continueOn.addRepositoryToWorkspace": "Add Remote Repository to Workspace...",
	"commands.openOnRemote": "Open on GitHub",
	"commands.continueOn": "Continue Working on...",
	"commands.openOnDesktop": "Reopen on the Desktop",
	"commands.openOnWeb": "Reopen on the Web",
	"commands.openInCodespaces": "Open in Codespaces...",
	"commands.applyPatch": "Import Changes...",
	"commands.exportPatch": "Export Changes...",
	"commands.clone": "Clone Repository Locally...",
	"commands.createBranch": "Create New Branch...",
	"commands.createBranchFrom": "Create New Branch from...",
	"commands.fetch": "Fetch",
	"commands.pull": "Pull",
	"commands.refresh": "Refresh",
	"commands.switchToBranch": "Switch to Branch...",
	"commands.sync": "Sync (Pull & Push)",
	"commands.deleteAllLocalRepositoryData": "Delete All Search Indexes",
	"commands.deleteLocalRepositoryData": "Delete Search Index...",
	"commands.commit": "Commit",
	"commands.discardAllChanges": "Discard All Changes",
	"commands.discardChanges": "Discard Changes",
	"commands.stageAllChanges": "Stage All Changes",
	"commands.stageChanges": "Stage Changes",
	"commands.unstageAllChanges": "Unstage All Changes",
	"commands.unstageChanges": "Unstage Changes",
	"commands.keepChanges": "Keep Changes",
	"commands.openChanges": "Open Changes",
	"commands.openFile": "Open File",
	"commands.createPullRequest": "Create a Pull Request",
	"commands.createDraftPullRequest": "Create a Draft Pull Request",
	"commands.enableIndexing": "Enable Search Indexing",
	"command.timeline.openDiff": "Open Changes",
	"command.timeline.openOnGitHub": "Open on GitHub",
	"command.timeline.copyCommitId": "Copy Commit ID",
	"command.timeline.copyCommitMessage": "Copy Commit Message",
	"command.timeline.selectForCompare": "Select for Compare",
	"command.timeline.compareWithSelected": "Compare with Selected",
	"command.enableDebugLogging": "Enable Debug Logging",
	"command.disableDebugLogging": "Disable Debug Logging",
	"command.views.workspaceRepositories.open": "Open Workspace",
	"command.views.workspaceRepositories.openInNewWindow": "Open Workspace in New Window",
	"command.views.workspaceRepositories.openChanges": "Open Changes",
	"command.views.workspaceRepositories.openFile": "Open File",
	"command.views.workspaceRepositories.applyAllChanges": "Apply All Changes",
	"command.views.workspaceRepositories.applyChanges": "Apply Changes",
	"commands.category": "Remote Repositories",
	"submenu.branch": "Branch",
	"submenu.changes": "Changes",
	"submenu.commit": "Commit",
	"submenu.patch": "Import / Export",
	"submenu.pullRequest": "Pull Request",
	"viewsWelcome.explorer": "You can remotely open a repository or pull request without cloning.\n[Open Remote Repository](command:remoteHub.openRepository 'Open a remote repository (e.g. from GitHub)')",
	"viewsWelcome.explorer.web": "You can remotely open a repository or pull request.\n[Open Repository](command:remoteHub.openRepository 'Open a remote repository (e.g. from GitHub)')",
	"viewsWelcome.debug": "Run and Debug are not available in this environment. To run and debug, you will need to continue in another setup.",
	"viewsWelcome.debug.continueOn": "[Continue Working on...](command:remoteHub.continueOn 'Continue working on this remote repository elsewhere')",
	"viewsWelcome.terminal": "Terminals are not available in this environment. To use the terminal, you will need to continue in another setup.",
	"viewsWelcome.terminal.continueOn": "[Continue Working on...](command:remoteHub.continueOn 'Continue working on this remote repository elsewhere')"
}
